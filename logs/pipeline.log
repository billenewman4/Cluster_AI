2025-06-08 10:53:36,530 - __main__ - INFO - 🚀 Starting Meat Inventory Pipeline
2025-06-08 10:53:36,530 - __main__ - INFO - Categories to process: ['Beef Chuck']
2025-06-08 10:53:36,530 - __main__ - INFO - 📥 Stage 1: Data Ingestion - Product Query Processing
2025-06-08 10:53:36,532 - __main__ - INFO - Processing product query file: Product_Query_2025_06_06.csv
2025-06-08 10:53:36,538 - __main__ - INFO - Read 1000 records from Product_Query_2025_06_06.csv with columns: ['ProductSK', 'SourceProductKey', 'ProductCode', 'ProductWarehouseCode', 'ProductDescription', 'ProductDescription2', 'ProductCategoryCode', 'ProductCategory', 'ProductMainCategoryCode', 'ProductMainCategory', 'WarehouseCode', 'Warehouse', 'WarehouseShort', 'ProcessCode', 'ProcessCodeDescription', 'AlphaName', 'BrandCode', 'BrandDescription', 'BrandRate', 'UnitOfMeasure_Stk', 'UnitOfMeasure_Alt', 'WeightConversion', 'UnitOfMeasure_Case', 'SourceSystems', 'LatestProductKeyVersion', 'IsCurrentRecordFlag']
2025-06-08 10:53:36,538 - __main__ - INFO - Full dataset contains 60 unique categories: ['Non Product', 'Pork Hams', 'Sausage', 'Poultry Ground', 'Miscellaneous Beef', 'Pork Rib', 'Pork Other', 'Rib', 'Beef Flank', 'Pork Loin', 'Misc. Items', 'Beef Chuck', 'Chicken Misc.', 'Chicken Airline Breast', 'Ground Beef Anmar Production', 'Beef Variety & Misc', 'Beef Other', 'Delete Items', 'Beef Rib', 'Beef Ground', 'Lamb', 'Hot Dogs', 'Beef Round', 'Pork Sausage', 'Beef Loin', 'Goat', 'Wild Game', 'Veal', 'Halal', 'Supplies', 'Pot Sticker', 'Dim Sum', 'Beef,Pork-Sausage,Smok', 'Pork Ham/Leg', 'Rabbit', 'DISCONTINUED ITEMS', 'Pork Butt', 'Chicken Main', 'Pork Variety', 'Ground Beef', 'Poultry Leg', 'Pork Shoulder', 'Pork Belly', 'Veal Strauss', 'Brisket', 'Chicken Variety', 'Plate', 'Game Meat', 'Duck', 'Poultry Breast', 'Poultry Whole', 'Turkey', 'Poultry Drumstick', 'Poultry Thigh', 'Poultry Tender', 'Poultry Wing', 'Poultry Other', 'Misc', 'Chicken Wings', 'Chicken Leg Meat']
2025-06-08 10:53:36,539 - __main__ - INFO - Top 5 categories by count: {'Beef Rib': 87, 'Pork Loin': 85, 'Pork Other': 81, 'Beef Flank': 80, 'Beef Chuck': 68}
2025-06-08 10:53:36,539 - __main__ - INFO - Found 68 records matching requested categories: ['Beef Chuck']
2025-06-08 10:53:36,541 - __main__ - INFO - Test run: Processing 10 products with 5 from requested categories
2025-06-08 10:53:36,541 - data_ingestion.core.product_transformer - INFO - Processing product data: 10 records with columns ['ProductSK', 'SourceProductKey', 'ProductCode', 'ProductWarehouseCode', 'ProductDescription', 'ProductDescription2', 'ProductCategoryCode', 'ProductCategory', 'ProductMainCategoryCode', 'ProductMainCategory', 'WarehouseCode', 'Warehouse', 'WarehouseShort', 'ProcessCode', 'ProcessCodeDescription', 'AlphaName', 'BrandCode', 'BrandDescription', 'BrandRate', 'UnitOfMeasure_Stk', 'UnitOfMeasure_Alt', 'WeightConversion', 'UnitOfMeasure_Case', 'SourceSystems', 'LatestProductKeyVersion', 'IsCurrentRecordFlag']
2025-06-08 10:53:36,541 - data_ingestion.core.product_transformer - INFO - Found description columns: Primary=ProductDescription, Secondary=ProductDescription2
2025-06-08 10:53:36,541 - data_ingestion.core.product_transformer - INFO - Primary description column 'ProductDescription' stats: 10 total rows, 0 null values, 0 empty strings
2025-06-08 10:53:36,542 - data_ingestion.core.product_transformer - INFO - Secondary description column 'ProductDescription2' stats: 10 total rows, 3 null values, 0 empty strings
2025-06-08 10:53:36,543 - data_ingestion.core.product_transformer - INFO - Merged description column 'product_description' stats: 10 total rows, 0 null values, 0 empty strings
2025-06-08 10:53:36,543 - data_ingestion.core.product_transformer - INFO - Sample merge: 'Pork Ham Tavern Superior' + '4/cs' = 'Pork Ham Tavern Superior 4/cs'
2025-06-08 10:53:36,543 - data_ingestion.core.product_transformer - INFO - Sample processed row after description merge:
2025-06-08 10:53:36,543 - data_ingestion.core.product_transformer - INFO -   - product_description: 'Pork Ham Tavern Superior 4/cs' (length: 29)
2025-06-08 10:53:36,543 - data_ingestion.core.product_transformer - INFO - Mapped ProductCategory to category_description with 3 unique categories
2025-06-08 10:53:36,543 - data_ingestion.core.product_transformer - INFO - Mapped BrandName to brand_name
2025-06-08 10:53:36,544 - data_ingestion.core.product_transformer - INFO - Mapped ProductCode to product_code
2025-06-08 10:53:36,544 - data_ingestion.core.product_transformer - INFO - Verified product_description column with sample: 'Pork Ham Tavern Superior 4/cs'
2025-06-08 10:53:36,544 - data_ingestion.core.product_transformer - INFO - Final validation successful. Processed 10 records with required columns present.
2025-06-08 10:53:36,545 - data_ingestion.core.product_transformer - INFO - Product description column stats: count                                                    10
unique                                                    4
top       BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL
freq                                                      4
Name: product_description, dtype: object
2025-06-08 10:53:36,545 - data_ingestion.core.product_transformer - INFO - Processed 10 product records with transformations
2025-06-08 10:53:36,602 - __main__ - INFO - Saved processed product data with 10 records to data/processed/product_query_processed.parquet
2025-06-08 10:53:36,618 - __main__ - INFO - Also saved as CSV to data/processed/product_query_processed.csv
2025-06-08 10:53:36,618 - __main__ - INFO - ✅ Successfully processed product query data
2025-06-08 10:53:36,618 - __main__ - INFO - 🤖 Stage 2: LLM Extraction
2025-06-08 10:53:36,878 - src.data_ingestion.utils.reference_data_loader - INFO - Loaded reference data for 11 primal cuts
2025-06-08 10:53:36,878 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Loaded reference data for 11 beef primals
2025-06-08 10:53:36,878 - __main__ - INFO - Loaded DynamicBeefExtractor with 11 supported primal cuts
2025-06-08 10:53:36,878 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Set current primal to: Chuck
2025-06-08 10:53:36,878 - __main__ - INFO - Using unified beef extractor for category: Beef Chuck (Primal: Chuck)
2025-06-08 10:53:36,878 - llm_extraction.batch_processor - WARNING - Could not load cache: Expecting value: line 1 column 1 (char 0)
2025-06-08 10:53:36,905 - __main__ - INFO - Loaded 10 records from processed product query data
2025-06-08 10:53:36,906 - __main__ - INFO - Available categories in data: ['Pork Hams' 'Non Product' 'Beef Chuck']
2025-06-08 10:53:36,906 - __main__ - INFO - Category counts: {'Beef Chuck': 5, 'Non Product': 3, 'Pork Hams': 2}
2025-06-08 10:53:36,906 - __main__ - INFO - Processing category: Beef Chuck
2025-06-08 10:53:36,906 - __main__ - INFO - Found 5 records for Beef Chuck
2025-06-08 10:53:36,907 - __main__ - INFO - Test run: Processing only 5 records
2025-06-08 10:53:36,907 - llm_extraction.batch_processor - INFO - Processing 5 records for Beef Chuck
2025-06-08 10:53:36,908 - llm_extraction.batch_processor - INFO - Converted 5 records to list of dicts
2025-06-08 10:53:36,908 - llm_extraction.batch_processor - INFO - First record: {'ProductSK': 452535, 'SourceProductKey': 32, 'ProductCode': '10019891', 'ProductWarehouseCode': '10019891-1', 'ProductDescription': 'BF CHUCK BI ARM/SEC CH *__', 'ProductDescription2': '113A USDA CHOICE', 'ProductCategoryCode': 103, 'ProductCategory': 'Beef Chuck', 'ProductMainCategoryCode': 10, 'ProductMainCategory': 'Beef', 'WarehouseCode': 1, 'Warehouse': 'Fulton Main', 'WarehouseShort': 'Main', 'ProcessCode': 1.0, 'ProcessCodeDescription': 'Box in box out', 'AlphaName': 'BFCHUCKBIA', 'BrandCode': 464.0, 'BrandName': 'USDA', 'BrandRate': 0.0, 'UnitOfMeasure_Stk': 'LB', 'UnitOfMeasure_Alt': 'CS', 'WeightConversion': 1.0, 'UnitOfMeasure_Case': 'CS', 'SourceSystems': 'Fulton', 'LatestProductKeyVersion': 1, 'IsCurrentRecordFlag': 1, 'product_description': 'BF CHUCK BI ARM/SEC CH *__ 113A USDA CHOICE', 'category_description': 'Beef Chuck', 'brand_name': 'USDA', 'product_code': '10019891'}
2025-06-08 10:53:36,908 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Extracting data from description: 'BF CHUCK BI ARM/SEC CH *__ 113A USDA CHOICE...'
2025-06-08 10:53:36,908 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Using specialized prompt for Chuck primal cut, extracting: 'BF CHUCK BI ARM/SEC CH *__ 113A USDA CHOICE...'
2025-06-08 10:53:37,037 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1b9b0cdb-77f8-4165-9144-6708a7a8b19e', 'json_data': {'messages': [{'role': 'system', 'content': "You are a butchery-domain extraction assistant specialized in beef chuck cuts.\nUse the Meat Buyer's Guide as ground truth for cut names and hierarchy.\n\nExtract structured data from product descriptions with high accuracy.\nFocus on identifying: species, primal, subprimal, grade, size, size unit, and brand.\n\nFor beef chuck, valid subprimals include: Chuck Flap, Chuck Roll, Clod, Clod Shoulder, Clod Hearts, Flat Iron, Teres Major, Chuck Short Rib, Bone-In Chuck, Bone-In Arm, Top Blade, Blade Meat, ScottyTender, Mock Tender\nCommon synonyms and alternative terms for these subprimals include: Arm Chuck, Arm Roast, Bistro Filet, Blade Meat, Bone-In Arm, Bone-In Chuck, Braising Ribs, Butler’s Steak, Cap & Wedge, Chuck Blade Meat, Chuck Eye Roll, Chuck Flap, Chuck Roast (bone-in), Chuck Roll, Chuck Short Rib, Chuck Tail Flap, Chuck Tender, Clod, Clod Heart (center muscle), Clod Hearts, Clod Roast, Clod Shoulder, Clod Shoulder Roast, Flap Tail, Flat Iron, Mock Tender, Oyster Blade, Petite Tender, Ribs 2-5, Scotch Tender, ScottyTender, Shoulder Tender, Teres Major, Top Blade, Top Blade Roast (whole muscle), Top Blade Steak\n\nReturn valid JSON only."}, {'role': 'user', 'content': 'Extract structured data from this product description:\n\nDescription: "BF CHUCK BI ARM/SEC CH *__ 113A USDA CHOICE"\n\nReturn a JSON object with exactly these keys:\n- species (Beef, Pork, etc.)\n- primal (e.g. Chuck, Loin) \n- subprimal (e.g. Chuck Flap, Chuck Roll, Clod)\n- grade (one of: No Grade, Prime, Choice, Select, NR, Utility, Wagyu, Angus, Creekstone Angus)\n- size (numeric value only, null if not found)\n- size_uom (oz | lb | # | g | kg, null if not found)\n- brand (free text or null)\n\nIf any value cannot be determined, use null.\n\nExamples:\n\nInput: "Beef Chuck Chuck Flap 15# Choice Certified Angus"\nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Chuck Flap", "grade": "Choice", "size": 15, "size_uom": "#", "brand": "Certified Angus"}\n\nInput: "Chuck Chuck Roll Prime 8oz"  \nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Chuck Roll", "grade": "Prime", "size": 8, "size_uom": "oz", "brand": null}\n\nInput: "Beef Chuck Clod Wagyu 12lb"\nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Clod", "grade": "Wagyu", "size": 12, "size_uom": "lb", "brand": null}'}], 'model': 'gpt-4o-mini', 'max_tokens': 500, 'temperature': 0.0}}
2025-06-08 10:53:37,061 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-08 10:53:37,513 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Extracting data from description: 'BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL...'
2025-06-08 10:53:37,515 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Extracting data from description: 'BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL...'
2025-06-08 10:53:37,515 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Extracting data from description: 'BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL...'
2025-06-08 10:53:37,515 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Extracting data from description: 'BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL...'
2025-06-08 10:53:37,515 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Using specialized prompt for Chuck primal cut, extracting: 'BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL...'
2025-06-08 10:53:37,516 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Using specialized prompt for Chuck primal cut, extracting: 'BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL...'
2025-06-08 10:53:37,516 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Using specialized prompt for Chuck primal cut, extracting: 'BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL...'
2025-06-08 10:53:37,516 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Using specialized prompt for Chuck primal cut, extracting: 'BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL...'
2025-06-08 10:53:37,518 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-3c23fabc-7936-4fc5-8961-dd47202e95c4', 'json_data': {'messages': [{'role': 'system', 'content': "You are a butchery-domain extraction assistant specialized in beef chuck cuts.\nUse the Meat Buyer's Guide as ground truth for cut names and hierarchy.\n\nExtract structured data from product descriptions with high accuracy.\nFocus on identifying: species, primal, subprimal, grade, size, size unit, and brand.\n\nFor beef chuck, valid subprimals include: Chuck Flap, Chuck Roll, Clod, Clod Shoulder, Clod Hearts, Flat Iron, Teres Major, Chuck Short Rib, Bone-In Chuck, Bone-In Arm, Top Blade, Blade Meat, ScottyTender, Mock Tender\nCommon synonyms and alternative terms for these subprimals include: Arm Chuck, Arm Roast, Bistro Filet, Blade Meat, Bone-In Arm, Bone-In Chuck, Braising Ribs, Butler’s Steak, Cap & Wedge, Chuck Blade Meat, Chuck Eye Roll, Chuck Flap, Chuck Roast (bone-in), Chuck Roll, Chuck Short Rib, Chuck Tail Flap, Chuck Tender, Clod, Clod Heart (center muscle), Clod Hearts, Clod Roast, Clod Shoulder, Clod Shoulder Roast, Flap Tail, Flat Iron, Mock Tender, Oyster Blade, Petite Tender, Ribs 2-5, Scotch Tender, ScottyTender, Shoulder Tender, Teres Major, Top Blade, Top Blade Roast (whole muscle), Top Blade Steak\n\nReturn valid JSON only."}, {'role': 'user', 'content': 'Extract structured data from this product description:\n\nDescription: "BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL"\n\nReturn a JSON object with exactly these keys:\n- species (Beef, Pork, etc.)\n- primal (e.g. Chuck, Loin) \n- subprimal (e.g. Chuck Flap, Chuck Roll, Clod)\n- grade (one of: No Grade, Prime, Choice, Select, NR, Utility, Wagyu, Angus, Creekstone Angus)\n- size (numeric value only, null if not found)\n- size_uom (oz | lb | # | g | kg, null if not found)\n- brand (free text or null)\n\nIf any value cannot be determined, use null.\n\nExamples:\n\nInput: "Beef Chuck Chuck Flap 15# Choice Certified Angus"\nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Chuck Flap", "grade": "Choice", "size": 15, "size_uom": "#", "brand": "Certified Angus"}\n\nInput: "Chuck Chuck Roll Prime 8oz"  \nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Chuck Roll", "grade": "Prime", "size": 8, "size_uom": "oz", "brand": null}\n\nInput: "Beef Chuck Clod Wagyu 12lb"\nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Clod", "grade": "Wagyu", "size": 12, "size_uom": "lb", "brand": null}'}], 'model': 'gpt-4o-mini', 'max_tokens': 500, 'temperature': 0.0}}
2025-06-08 10:53:37,519 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-38a49bfd-c505-456c-9188-677d0feeaab5', 'json_data': {'messages': [{'role': 'system', 'content': "You are a butchery-domain extraction assistant specialized in beef chuck cuts.\nUse the Meat Buyer's Guide as ground truth for cut names and hierarchy.\n\nExtract structured data from product descriptions with high accuracy.\nFocus on identifying: species, primal, subprimal, grade, size, size unit, and brand.\n\nFor beef chuck, valid subprimals include: Chuck Flap, Chuck Roll, Clod, Clod Shoulder, Clod Hearts, Flat Iron, Teres Major, Chuck Short Rib, Bone-In Chuck, Bone-In Arm, Top Blade, Blade Meat, ScottyTender, Mock Tender\nCommon synonyms and alternative terms for these subprimals include: Arm Chuck, Arm Roast, Bistro Filet, Blade Meat, Bone-In Arm, Bone-In Chuck, Braising Ribs, Butler’s Steak, Cap & Wedge, Chuck Blade Meat, Chuck Eye Roll, Chuck Flap, Chuck Roast (bone-in), Chuck Roll, Chuck Short Rib, Chuck Tail Flap, Chuck Tender, Clod, Clod Heart (center muscle), Clod Hearts, Clod Roast, Clod Shoulder, Clod Shoulder Roast, Flap Tail, Flat Iron, Mock Tender, Oyster Blade, Petite Tender, Ribs 2-5, Scotch Tender, ScottyTender, Shoulder Tender, Teres Major, Top Blade, Top Blade Roast (whole muscle), Top Blade Steak\n\nReturn valid JSON only."}, {'role': 'user', 'content': 'Extract structured data from this product description:\n\nDescription: "BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL"\n\nReturn a JSON object with exactly these keys:\n- species (Beef, Pork, etc.)\n- primal (e.g. Chuck, Loin) \n- subprimal (e.g. Chuck Flap, Chuck Roll, Clod)\n- grade (one of: No Grade, Prime, Choice, Select, NR, Utility, Wagyu, Angus, Creekstone Angus)\n- size (numeric value only, null if not found)\n- size_uom (oz | lb | # | g | kg, null if not found)\n- brand (free text or null)\n\nIf any value cannot be determined, use null.\n\nExamples:\n\nInput: "Beef Chuck Chuck Flap 15# Choice Certified Angus"\nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Chuck Flap", "grade": "Choice", "size": 15, "size_uom": "#", "brand": "Certified Angus"}\n\nInput: "Chuck Chuck Roll Prime 8oz"  \nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Chuck Roll", "grade": "Prime", "size": 8, "size_uom": "oz", "brand": null}\n\nInput: "Beef Chuck Clod Wagyu 12lb"\nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Clod", "grade": "Wagyu", "size": 12, "size_uom": "lb", "brand": null}'}], 'model': 'gpt-4o-mini', 'max_tokens': 500, 'temperature': 0.0}}
2025-06-08 10:53:37,520 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2245ad3c-cd8c-43e7-853b-03483f02b27d', 'json_data': {'messages': [{'role': 'system', 'content': "You are a butchery-domain extraction assistant specialized in beef chuck cuts.\nUse the Meat Buyer's Guide as ground truth for cut names and hierarchy.\n\nExtract structured data from product descriptions with high accuracy.\nFocus on identifying: species, primal, subprimal, grade, size, size unit, and brand.\n\nFor beef chuck, valid subprimals include: Chuck Flap, Chuck Roll, Clod, Clod Shoulder, Clod Hearts, Flat Iron, Teres Major, Chuck Short Rib, Bone-In Chuck, Bone-In Arm, Top Blade, Blade Meat, ScottyTender, Mock Tender\nCommon synonyms and alternative terms for these subprimals include: Arm Chuck, Arm Roast, Bistro Filet, Blade Meat, Bone-In Arm, Bone-In Chuck, Braising Ribs, Butler’s Steak, Cap & Wedge, Chuck Blade Meat, Chuck Eye Roll, Chuck Flap, Chuck Roast (bone-in), Chuck Roll, Chuck Short Rib, Chuck Tail Flap, Chuck Tender, Clod, Clod Heart (center muscle), Clod Hearts, Clod Roast, Clod Shoulder, Clod Shoulder Roast, Flap Tail, Flat Iron, Mock Tender, Oyster Blade, Petite Tender, Ribs 2-5, Scotch Tender, ScottyTender, Shoulder Tender, Teres Major, Top Blade, Top Blade Roast (whole muscle), Top Blade Steak\n\nReturn valid JSON only."}, {'role': 'user', 'content': 'Extract structured data from this product description:\n\nDescription: "BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL"\n\nReturn a JSON object with exactly these keys:\n- species (Beef, Pork, etc.)\n- primal (e.g. Chuck, Loin) \n- subprimal (e.g. Chuck Flap, Chuck Roll, Clod)\n- grade (one of: No Grade, Prime, Choice, Select, NR, Utility, Wagyu, Angus, Creekstone Angus)\n- size (numeric value only, null if not found)\n- size_uom (oz | lb | # | g | kg, null if not found)\n- brand (free text or null)\n\nIf any value cannot be determined, use null.\n\nExamples:\n\nInput: "Beef Chuck Chuck Flap 15# Choice Certified Angus"\nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Chuck Flap", "grade": "Choice", "size": 15, "size_uom": "#", "brand": "Certified Angus"}\n\nInput: "Chuck Chuck Roll Prime 8oz"  \nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Chuck Roll", "grade": "Prime", "size": 8, "size_uom": "oz", "brand": null}\n\nInput: "Beef Chuck Clod Wagyu 12lb"\nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Clod", "grade": "Wagyu", "size": 12, "size_uom": "lb", "brand": null}'}], 'model': 'gpt-4o-mini', 'max_tokens': 500, 'temperature': 0.0}}
2025-06-08 10:53:37,521 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-09689519-2d1b-4578-81ec-164deb05d80a', 'json_data': {'messages': [{'role': 'system', 'content': "You are a butchery-domain extraction assistant specialized in beef chuck cuts.\nUse the Meat Buyer's Guide as ground truth for cut names and hierarchy.\n\nExtract structured data from product descriptions with high accuracy.\nFocus on identifying: species, primal, subprimal, grade, size, size unit, and brand.\n\nFor beef chuck, valid subprimals include: Chuck Flap, Chuck Roll, Clod, Clod Shoulder, Clod Hearts, Flat Iron, Teres Major, Chuck Short Rib, Bone-In Chuck, Bone-In Arm, Top Blade, Blade Meat, ScottyTender, Mock Tender\nCommon synonyms and alternative terms for these subprimals include: Arm Chuck, Arm Roast, Bistro Filet, Blade Meat, Bone-In Arm, Bone-In Chuck, Braising Ribs, Butler’s Steak, Cap & Wedge, Chuck Blade Meat, Chuck Eye Roll, Chuck Flap, Chuck Roast (bone-in), Chuck Roll, Chuck Short Rib, Chuck Tail Flap, Chuck Tender, Clod, Clod Heart (center muscle), Clod Hearts, Clod Roast, Clod Shoulder, Clod Shoulder Roast, Flap Tail, Flat Iron, Mock Tender, Oyster Blade, Petite Tender, Ribs 2-5, Scotch Tender, ScottyTender, Shoulder Tender, Teres Major, Top Blade, Top Blade Roast (whole muscle), Top Blade Steak\n\nReturn valid JSON only."}, {'role': 'user', 'content': 'Extract structured data from this product description:\n\nDescription: "BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL"\n\nReturn a JSON object with exactly these keys:\n- species (Beef, Pork, etc.)\n- primal (e.g. Chuck, Loin) \n- subprimal (e.g. Chuck Flap, Chuck Roll, Clod)\n- grade (one of: No Grade, Prime, Choice, Select, NR, Utility, Wagyu, Angus, Creekstone Angus)\n- size (numeric value only, null if not found)\n- size_uom (oz | lb | # | g | kg, null if not found)\n- brand (free text or null)\n\nIf any value cannot be determined, use null.\n\nExamples:\n\nInput: "Beef Chuck Chuck Flap 15# Choice Certified Angus"\nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Chuck Flap", "grade": "Choice", "size": 15, "size_uom": "#", "brand": "Certified Angus"}\n\nInput: "Chuck Chuck Roll Prime 8oz"  \nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Chuck Roll", "grade": "Prime", "size": 8, "size_uom": "oz", "brand": null}\n\nInput: "Beef Chuck Clod Wagyu 12lb"\nOutput: {"species": "Beef", "primal": "Chuck", "subprimal": "Clod", "grade": "Wagyu", "size": 12, "size_uom": "lb", "brand": null}'}], 'model': 'gpt-4o-mini', 'max_tokens': 500, 'temperature': 0.0}}
2025-06-08 10:53:37,522 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-08 10:53:37,523 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-08 10:53:37,524 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-08 10:53:37,524 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-08 10:53:38,465 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-08 10:53:38,467 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 08 Jun 2025 14:53:38 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-gblyqg98zxrogzddqhkvjahb'), ('openai-processing-ms', '767'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '770'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '4000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '3999431'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '8ms'), ('x-request-id', 'req_4ab750b20a55cd372a9d79bcc7ab42b2'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=lR6eQi8xzrmVTXa6QPQj.nmyebkY7H4kRpUlZRgDQes-1749394418-1.0.1.1-pZkrZSYTQobcaeR5mI8wv6oiGTgzrtbKPISK7oO_ZL9lkFJwSSVTF_2OoOnURgT.Ifqp57UWRPXUqcx6NznO55KqVtmXFlf4Y9PTRGXGkHs; path=/; expires=Sun, 08-Jun-25 15:23:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=UiY_NtgktuqA3ChJcyNJkIqmL1gWf8vj62Q00Qes1jU-1749394418452-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94c9384619328fba-BOS'), ('content-encoding', 'br'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-08 10:53:38,467 - openai._base_client - DEBUG - request_id: req_4ab750b20a55cd372a9d79bcc7ab42b2
2025-06-08 10:53:38,474 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO -  





 API call successful, response ```json
{"species": "Beef", "primal": "Chuck", "subprimal": "ScottyTender", "grade": "NR", "size": null, "size_uom": null, "brand": null}
``` 






2025-06-08 10:53:38,475 - src.llm_extraction.extractors.dynamic_beef_extractor - ERROR - Failed to parse API response as JSON: Expecting value: line 1 column 1 (char 0)
2025-06-08 10:53:38,475 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Raw API response: ```json
{"species": "Beef", "primal": "Chuck", "subprimal": "ScottyTender", "grade": "NR", "size": null, "size_uom": null, "brand": null}
```
2025-06-08 10:53:38,475 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Successfully parsed JSON from text response
2025-06-08 10:53:38,475 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Extracted data: {'species': 'Beef', 'primal': 'Chuck', 'subprimal': 'ScottyTender', 'grade': 'NR', 'size': None, 'size_uom': None, 'brand': None}
2025-06-08 10:53:38,475 - llm_extraction.batch_processor - DEBUG - Processed: BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL... -> ScottyTender
2025-06-08 10:53:38,516 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-08 10:53:38,525 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 08 Jun 2025 14:53:38 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-gblyqg98zxrogzddqhkvjahb'), ('openai-processing-ms', '1057'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1084'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '4000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '3999432'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '8ms'), ('x-request-id', 'req_f306da24364dded29e5a2ed9ead195b7'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=7xProSGk8LYF.5tP67hyyPo635ltxutvwtMr.G0eP0w-1749394418-1.0.1.1-yXORZr_q8no10HUyOS46SaS5Zx1oKwZNcYmHwZobp2Lqq2CQPPoCqs7znaw3wl0zXfXhp5b_7furcKL94fVyXs1otTvhFx_wAT8hWXH_KTk; path=/; expires=Sun, 08-Jun-25 15:23:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=0yfaLkmeYNSWj_IijOb.VNeGJx_tcRd_MbqUESFc9s8-1749394418519-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94c938436d9a900e-BOS'), ('content-encoding', 'br'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-08 10:53:38,526 - openai._base_client - DEBUG - request_id: req_f306da24364dded29e5a2ed9ead195b7
2025-06-08 10:53:38,526 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO -  





 API call successful, response ```json
{"species": "Beef", "primal": "Chuck", "subprimal": "Bone-In Arm", "grade": "Choice", "size": null, "size_uom": null, "brand": null}
``` 






2025-06-08 10:53:38,526 - src.llm_extraction.extractors.dynamic_beef_extractor - ERROR - Failed to parse API response as JSON: Expecting value: line 1 column 1 (char 0)
2025-06-08 10:53:38,526 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Raw API response: ```json
{"species": "Beef", "primal": "Chuck", "subprimal": "Bone-In Arm", "grade": "Choice", "size": null, "size_uom": null, "brand": null}
```
2025-06-08 10:53:38,526 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Successfully parsed JSON from text response
2025-06-08 10:53:38,527 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Extracted data: {'species': 'Beef', 'primal': 'Chuck', 'subprimal': 'Bone-In Arm', 'grade': 'Choice', 'size': None, 'size_uom': None, 'brand': None}
2025-06-08 10:53:38,527 - llm_extraction.batch_processor - DEBUG - Processed: BF CHUCK BI ARM/SEC CH *__ 113A USDA CHOICE... -> Bone-In Arm
2025-06-08 10:53:38,669 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-08 10:53:38,670 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 08 Jun 2025 14:53:38 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-gblyqg98zxrogzddqhkvjahb'), ('openai-processing-ms', '798'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '801'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '4000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '3999431'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '8ms'), ('x-request-id', 'req_997437c9f26723c560fe5314fbc864eb'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=.JW1kjRR82jKfi3ArPsSWtgX1ni4f1mFr1I3tItsSIw-1749394418-1.0.1.1-p9xkM8qpykUe_4uDeV5D6qgGGaugGKJrlfGSiKg4Yo_4.osMkSfBH9xUuuHsD9cud2KVoLYk4xJvWM9Fs0kOXZkGDnwV0HskXBgBco4xFww; path=/; expires=Sun, 08-Jun-25 15:23:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=p8_lLh.gVPJPq9nvG0wpXT_BhGEcu9axoPe.fGa5Dqo-1749394418669-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94c938462a208f8d-BOS'), ('content-encoding', 'br'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-08 10:53:38,670 - openai._base_client - DEBUG - request_id: req_997437c9f26723c560fe5314fbc864eb
2025-06-08 10:53:38,671 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO -  





 API call successful, response ```json
{"species": "Beef", "primal": "Chuck", "subprimal": "ScottyTender", "grade": "NR", "size": null, "size_uom": null, "brand": null}
``` 






2025-06-08 10:53:38,671 - src.llm_extraction.extractors.dynamic_beef_extractor - ERROR - Failed to parse API response as JSON: Expecting value: line 1 column 1 (char 0)
2025-06-08 10:53:38,671 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Raw API response: ```json
{"species": "Beef", "primal": "Chuck", "subprimal": "ScottyTender", "grade": "NR", "size": null, "size_uom": null, "brand": null}
```
2025-06-08 10:53:38,672 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Successfully parsed JSON from text response
2025-06-08 10:53:38,672 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Extracted data: {'species': 'Beef', 'primal': 'Chuck', 'subprimal': 'ScottyTender', 'grade': 'NR', 'size': None, 'size_uom': None, 'brand': None}
2025-06-08 10:53:38,672 - llm_extraction.batch_processor - DEBUG - Processed: BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL... -> ScottyTender
2025-06-08 10:53:38,689 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-08 10:53:38,691 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 08 Jun 2025 14:53:38 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-gblyqg98zxrogzddqhkvjahb'), ('openai-processing-ms', '726'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '728'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '4000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '3999430'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '8ms'), ('x-request-id', 'req_88e74826c100e619178f4a4d39e29e88'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=8VFUg6.afqcjR8kfBGnGPHNAgsuC886qhx.67LMQkp4-1749394418-1.0.1.1-vy_u9l0vfQY_u1DfOGuQFRCttjswkikPimthEenBkRcKii9k7kwQCC.wxJJc81ei7MlZS_FWUW9P6hCbsvqCXKIBoSiVnE5gMLfbaPJPFRY; path=/; expires=Sun, 08-Jun-25 15:23:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=vuQFEDl157HojTUFPH7vfaRI8r3gN43ZQmKsZhFn71k-1749394418693-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94c938462e938f6c-BOS'), ('content-encoding', 'br'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-08 10:53:38,692 - openai._base_client - DEBUG - request_id: req_88e74826c100e619178f4a4d39e29e88
2025-06-08 10:53:38,693 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO -  





 API call successful, response ```json
{"species": "Beef", "primal": "Chuck", "subprimal": "ScottyTender", "grade": "NR", "size": null, "size_uom": null, "brand": null}
``` 






2025-06-08 10:53:38,693 - src.llm_extraction.extractors.dynamic_beef_extractor - ERROR - Failed to parse API response as JSON: Expecting value: line 1 column 1 (char 0)
2025-06-08 10:53:38,693 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Raw API response: ```json
{"species": "Beef", "primal": "Chuck", "subprimal": "ScottyTender", "grade": "NR", "size": null, "size_uom": null, "brand": null}
```
2025-06-08 10:53:38,693 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Successfully parsed JSON from text response
2025-06-08 10:53:38,693 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Extracted data: {'species': 'Beef', 'primal': 'Chuck', 'subprimal': 'ScottyTender', 'grade': 'NR', 'size': None, 'size_uom': None, 'brand': None}
2025-06-08 10:53:38,693 - llm_extraction.batch_processor - DEBUG - Processed: BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL... -> ScottyTender
2025-06-08 10:53:38,716 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-08 10:53:38,717 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 08 Jun 2025 14:53:38 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-gblyqg98zxrogzddqhkvjahb'), ('openai-processing-ms', '1020'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1038'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '4000000'), ('x-ratelimit-remaining-requests', '4998'), ('x-ratelimit-remaining-tokens', '3999431'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '8ms'), ('x-request-id', 'req_6fe3e8316010e008aeca801ebd9189c3'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=uCGaswJhYn8q40rI3xCGm_jL37PHldTZKYqpTA6797Y-1749394418-1.0.1.1-3BNUsm8gqLNJdHbpdlhRpSrIvm2jPlErm7ik4XxhR0cDQojWTRn28eDFaHWPlWFFsh_I0cnUbdM_lY2zD6WB7bJHHzbQCyrMzEvNjd1z3_U; path=/; expires=Sun, 08-Jun-25 15:23:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=Y_Vu0BLZhSCj3aUONo7pbGf2UAEBffC80e5l89DAXs0-1749394418720-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94c938461df08f7e-BOS'), ('content-encoding', 'br'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-08 10:53:38,718 - openai._base_client - DEBUG - request_id: req_6fe3e8316010e008aeca801ebd9189c3
2025-06-08 10:53:38,718 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO -  





 API call successful, response ```json
{"species": "Beef", "primal": "Chuck", "subprimal": "ScottyTender", "grade": "NR", "size": null, "size_uom": null, "brand": null}
``` 






2025-06-08 10:53:38,718 - src.llm_extraction.extractors.dynamic_beef_extractor - ERROR - Failed to parse API response as JSON: Expecting value: line 1 column 1 (char 0)
2025-06-08 10:53:38,718 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Raw API response: ```json
{"species": "Beef", "primal": "Chuck", "subprimal": "ScottyTender", "grade": "NR", "size": null, "size_uom": null, "brand": null}
```
2025-06-08 10:53:38,718 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Successfully parsed JSON from text response
2025-06-08 10:53:38,718 - src.llm_extraction.extractors.dynamic_beef_extractor - INFO - Extracted data: {'species': 'Beef', 'primal': 'Chuck', 'subprimal': 'ScottyTender', 'grade': 'NR', 'size': None, 'size_uom': None, 'brand': None}
2025-06-08 10:53:38,719 - llm_extraction.batch_processor - DEBUG - Processed: BF CHUCK SCOTCH TENDER NR AME 116B-1 USDA NO ROLL... -> ScottyTender
2025-06-08 10:53:38,722 - llm_extraction.batch_processor - INFO - Batch processing complete. 5 records processed.
2025-06-08 10:53:38,722 - __main__ - INFO - Successfully processed 5 records for Beef Chuck
2025-06-08 10:53:38,723 - __main__ - INFO - 📤 Stage 3: Output Generation
2025-06-08 10:53:38,727 - output_generation.file_writer - INFO - Separated data: 5 clean records, 0 flagged records
2025-06-08 10:53:38,728 - output_generation.file_writer - INFO - Written 5 clean records to outputs/beef_chuck_extracted.csv
2025-06-08 10:53:38,738 - output_generation.file_writer - INFO - Created master Excel file with 5 records at outputs/meat_inventory_master_20250608_105338.xlsx
2025-06-08 10:53:38,744 - __main__ - INFO - Output files created: ['Beef Chuck', 'excel_master']
2025-06-08 10:53:38,744 - __main__ - INFO - ⏭️ Stage 4: Database Upload (Skipped - use --upload-to-firebase to enable)
2025-06-08 10:53:38,744 - __main__ - INFO - ✅ Pipeline Complete!
2025-06-08 10:53:38,744 - __main__ - INFO - 📊 Summary:
2025-06-08 10:53:38,744 - __main__ - INFO -    Total records processed: 5
2025-06-08 10:53:38,745 - __main__ - INFO -    Records needing review: 0 (0.0%)
2025-06-08 10:53:38,745 - __main__ - INFO -    Average confidence: 0.95
